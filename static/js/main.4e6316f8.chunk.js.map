{"version":3,"sources":["components/Shared/TodoModal.jsx","components/TodosPage/NoTodos.jsx","hooks/useReminder.jsx","components/TodosPage/Filter.jsx","components/Shared/TodoStatus.jsx","redux/actions/TodosActions.js","hooks/FormInputReducer.js","hooks/useEditTodo.jsx","components/Shared/TodoForm.jsx","components/Shared/EditTodo.jsx","components/Shared/TodoOptions.jsx","components/Shared/TodoItem.jsx","components/TodosPage/TodosList.jsx","hooks/useCreateTodo.jsx","components/TodosPage/CreateTodo.jsx","pages/TodosPage/TodosPage.jsx","components/RemaindersPage/NoReminders.jsx","components/RemaindersPage/RemindersList.jsx","pages/RemaindersPage/TodoReminders.jsx","pages/SummaryPage/TodoSummaryPage.jsx","App.js","reportWebVitals.js","redux/reducers/TodosReducer.js","redux/store.js","index.js"],"names":["TodoModal","show","closeModal","Component","data","Modal","onHide","todo","Button","variant","onClick","NoTodos","showModal","className","size","color","useReminder","props","useSelector","state","filter","scheduleInfo","isScheduled","today","Date","DATE","date","getDate","getMonth","getFullYear","Filter","selectFilter","Form","Control","as","onChange","TodoStatus","completed","isToday","toDateString","toggleCompleteTodo","id","type","payload","deleteTodo","FormInputReducer","action","name","summary","useEditTodo","dispatchTodo","useDispatch","initialState","useReducer","dispatch","edit_Todo","editTodo","TodoForm","mode","useState","error","setError","Group","controlId","Label","placeholder","autoComplete","value","e","target","rows","Check","label","checked","trim","EditTodo","TodoOptions","editModal","title","to","TodoItem","showEditModal","setEditModal","ListGroup","Item","TodosList","todos","noOfReminders","length","setFilter","filterTodos","Link","Badge","event","map","useCreateTodo","create_Todo","uuid","CreateTodo","TodosPage","setShow","NoReminders","RemindersList","reminders","TodoReminders","history","useHistory","goBack","TodoSummaryPage","useParams","find","undefined","replace","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOCALSTORAGE_KEY","JSON","parse","localStorage","getItem","remainderReducer","_create","_edit","_toggle","_delete","newState","setItem","stringify","index","findIndex","removeItem","store","createStore","todosReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e6316f8.chunk.js","sourcesContent":["import { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst TodoModal = ({ show, closeModal, Component, data = null }) => {\r\n  return (\r\n    <Modal show={show} onHide={closeModal}>\r\n      <Component closeModal={closeModal} todo={data} />\r\n      <Button variant=\"danger\" onClick={closeModal}>\r\n        Cancel\r\n      </Button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TodoModal;\r\n","import { Button } from \"react-bootstrap\";\r\nimport { RiTodoLine } from \"react-icons/ri\";\r\n\r\nconst NoTodos = ({ showModal }) => {\r\n  return (\r\n    <div className=\"no-todos-container\">\r\n      <RiTodoLine size={200} color=\"lightgrey\" className=\"no-todos-icon\" />\r\n      <p className=\"no-todos text-secondary\">\r\n        No To-Do<small>s</small>\r\n      </p>\r\n      <Button variant=\"light\" className=\"text-primary\" onClick={showModal}>\r\n        + create todo\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoTodos;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst useReminder = (props) => {\r\n  const reminders = useSelector((state) => {\r\n    return state.filter((todo) => {\r\n      if (todo.scheduleInfo.isScheduled) {\r\n        const today = new Date();\r\n        const DATE = new Date(todo.scheduleInfo.date);\r\n        return (\r\n          DATE.getDate() === today.getDate() &&\r\n          DATE.getMonth() === today.getMonth() &&\r\n          DATE.getFullYear() === today.getFullYear()\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n  });\r\n\r\n  return reminders;\r\n};\r\n\r\nexport default useReminder;\r\n","import { Form } from \"react-bootstrap\";\r\n\r\nconst Filter = ({ selectFilter }) => {\r\n  return (\r\n    <Form.Control className=\"filter\" as=\"select\" onChange={selectFilter}>\r\n      <option>All</option>\r\n      <option>Completed</option>\r\n      <option>Incomplete</option>\r\n      <option>Scheduled</option>\r\n      <option>Unscheduled</option>\r\n    </Form.Control>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { MdSchedule, MdDone, MdClear } from \"react-icons/md\";\r\n\r\nconst TodoStatus = ({ scheduleInfo, completed }) => {\r\n  const { isScheduled, date } = scheduleInfo;\r\n  const isToday = () => {\r\n    const today = new Date();\r\n    const DATE = new Date(date);\r\n    if (\r\n      DATE.getMonth() === today.getMonth() &&\r\n      DATE.getFullYear() === today.getFullYear()\r\n    ) {\r\n      return DATE.getDate() - today.getDate();\r\n    } else {\r\n      if (\r\n        DATE.getMonth() - today.getMonth() < 0 ||\r\n        DATE.getFullYear() - today.getFullYear() < 0\r\n      )\r\n        return -1;\r\n    }\r\n  };\r\n  const getScheduledDate = () => {\r\n    if (isToday() === 0) return \"Scheduled Today\";\r\n    else if (isToday() === 1) return \"Scheduled Tomorrow\";\r\n    else if (isToday() < 0)\r\n      return `Schedule expired on ${new Date(date).toDateString()}`;\r\n    return `Scheduled to ${new Date(date).toDateString()}`;\r\n  };\r\n  return (\r\n    <div className=\"d-flex align-items-center flex-wrap\">\r\n      {completed ? (\r\n        <span className=\"text-success\">\r\n          <MdDone /> <small>completed</small>\r\n        </span>\r\n      ) : (\r\n        <span className=\"text-danger\">\r\n          <MdClear /> <small>not completed</small>\r\n        </span>\r\n      )}\r\n      {isScheduled ? (\r\n        <h5 className=\"m-1 ml-2\">\r\n          <span\r\n            className={`badge badge-pill badge-${\r\n              isToday() < 0 ? \"danger\" : \"warning\"\r\n            }`}\r\n          >\r\n            <MdSchedule /> <small>{getScheduledDate()}</small>\r\n          </span>\r\n        </h5>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoStatus;\r\n","import { v4 as uuid } from \"uuid\";\r\n\r\nexport const createTodo = (todo) => {\r\n  return {\r\n    type: \"create\",\r\n    payload: { ...todo, id: uuid(), completed: false },\r\n  };\r\n};\r\n\r\nexport const editTodo = (todo) => {\r\n  return {\r\n    type: \"edit\",\r\n    payload: todo,\r\n  };\r\n};\r\n\r\nexport const toggleCompleteTodo = (id) => {\r\n  return {\r\n    type: \"toggle_complete\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return {\r\n    type: \"delete\",\r\n    payload: id,\r\n  };\r\n};\r\n","const FormInputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"name\":\r\n      return { ...state, name: action.payload };\r\n    case \"summary\":\r\n      return { ...state, summary: action.payload };\r\n    case \"toggle\":\r\n      return {\r\n        ...state,\r\n        scheduleInfo: {\r\n          ...state.scheduleInfo,\r\n          isScheduled: !state.scheduleInfo.isScheduled,\r\n        },\r\n      };\r\n    case \"schedule\":\r\n      return {\r\n        ...state,\r\n        scheduleInfo: { ...state.scheduleInfo, date: action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default FormInputReducer;\r\n","import { useReducer } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editTodo } from \"../redux/actions/TodosActions\";\r\nimport FormInputReducer from \"./FormInputReducer\";\r\n\r\nconst useEditTodo = (todo) => {\r\n  const dispatchTodo = useDispatch();\r\n  const initialState = todo;\r\n\r\n  const [state, dispatch] = useReducer(FormInputReducer, initialState);\r\n\r\n  const edit_Todo = () => {\r\n    dispatchTodo(editTodo(state));\r\n  };\r\n\r\n  return { state, dispatch, edit_Todo };\r\n};\r\n\r\nexport default useEditTodo;\r\n","import { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst TodoForm = ({ state, dispatch, action, mode }) => {\r\n  const { name, summary, scheduleInfo } = state;\r\n  const [error, setError] = useState(false);\r\n  const submit = () => {\r\n    if (name.trim() === \"\" || summary.trim() === \"\") setError(true);\r\n    else {\r\n      setError(false);\r\n      action();\r\n    }\r\n  };\r\n  return (\r\n    <Form className=\"m-4\">\r\n      {error ? (\r\n        <h5 className=\"text-danger\">Please fill all the fields</h5>\r\n      ) : null}\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter to-do name\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={(e) => dispatch({ type: \"name\", payload: e.target.value })}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"summary\">\r\n        <Form.Label>Summary</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={6}\r\n          placeholder=\"Enter summary\"\r\n          value={summary}\r\n          onChange={(e) =>\r\n            dispatch({ type: \"summary\", payload: e.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"check\">\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Schedule Todo\"\r\n          checked={scheduleInfo.isScheduled}\r\n          onClick={() => dispatch({ type: \"toggle\" })}\r\n        />\r\n      </Form.Group>\r\n      {scheduleInfo.isScheduled ? (\r\n        <Form.Group controlId=\"date\">\r\n          <Form.Control\r\n            type=\"date\"\r\n            placeholder=\"Pick date\"\r\n            value={scheduleInfo.date}\r\n            onChange={(e) =>\r\n              dispatch({ type: \"schedule\", payload: e.target.value })\r\n            }\r\n          />\r\n        </Form.Group>\r\n      ) : null}\r\n      <Button variant=\"primary\" onClick={submit}>\r\n        {mode === \"edit\" ? \"Update\" : \"Create\"} Todo\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import useEditTodo from \"../../hooks/useEditTodo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nconst EditTodo = ({ todo, closeModal }) => {\r\n  const { state, dispatch, edit_Todo } = useEditTodo(todo);\r\n  const editTodo = () => {\r\n    edit_Todo();\r\n    closeModal();\r\n  };\r\n  return (\r\n    <TodoForm state={state} dispatch={dispatch} action={editTodo} mode=\"edit\" />\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CgChevronRightO } from \"react-icons/cg\";\r\nimport { MdEdit, MdDelete } from \"react-icons/md\";\r\nimport { IoCheckmarkCircle, IoCloseCircle } from \"react-icons/io5\";\r\nimport { deleteTodo, toggleCompleteTodo } from \"../../redux/actions/TodosActions\";\r\nimport EditTodo from \"./EditTodo\";\r\nimport TodoModal from \"./TodoModal\";\r\n\r\nconst TodoOptions = ({ todo, show, editModal, closeModal }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <div className=\"options\">\r\n        {todo.completed ? (\r\n          <IoCloseCircle\r\n            size={20}\r\n            title=\"mark as incomplete\"\r\n            className=\"incomplete\"\r\n            onClick={() => dispatch(toggleCompleteTodo(todo.id))}\r\n          />\r\n        ) : (\r\n          <IoCheckmarkCircle\r\n            size={20}\r\n            title=\"mark as complete\"\r\n            className=\"complete\"\r\n            onClick={() => dispatch(toggleCompleteTodo(todo.id))}\r\n          />\r\n        )}\r\n        <MdEdit\r\n          size={20}\r\n          title=\"edit\"\r\n          className=\"ml-2 edit\"\r\n          onClick={editModal}\r\n        />\r\n        <MdDelete\r\n          size={20}\r\n          className=\"ml-2 mr-2 delete\"\r\n          title=\"delete\"\r\n          onClick={() => dispatch(deleteTodo(todo.id))}\r\n        />\r\n        <Link to={`/todos/${todo.id}`}>\r\n          <CgChevronRightO\r\n            className=\"view\"\r\n            size={20}\r\n            title=\"click to view summary\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <TodoModal\r\n        show={show}\r\n        closeModal={closeModal}\r\n        Component={EditTodo}\r\n        data={todo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoOptions;\r\n","import { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport TodoStatus from \"./TodoStatus\";\r\nimport TodoOptions from \"./TodoOptions\";\r\n\r\nconst TodoItem = ({ todo }) => {\r\n  const [showEditModal, setEditModal] = useState(false);\r\n  return (\r\n    <ListGroup.Item className=\"todo-item\">\r\n      <div className=\"d-flex flex-column\">\r\n        <span className=\"todo-item-name\">{todo.name}</span>\r\n        <TodoStatus\r\n          completed={todo.completed}\r\n          scheduleInfo={todo.scheduleInfo}\r\n        />\r\n      </div>\r\n      <TodoOptions\r\n        show={showEditModal}\r\n        todo={todo}\r\n        editModal={() => setEditModal(true)}\r\n        closeModal={() => setEditModal(false)}\r\n      />\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { useState } from \"react\";\r\nimport { Badge, Button, ListGroup } from \"react-bootstrap\";\r\nimport { MdNotifications } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useReminder from \"../../hooks/useReminder\";\r\nimport Filter from \"./Filter\";\r\nimport TodoItem from \"../Shared/TodoItem\";\r\n\r\nconst TodosList = ({ todos, showModal }) => {\r\n  const noOfReminders = useReminder().length;\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const filterTodos = () => {\r\n    if (filter === \"All\") return todos;\r\n    else {\r\n      switch (filter) {\r\n        case \"Completed\":\r\n          return todos.filter((todo) => todo.completed);\r\n        case \"Incomplete\":\r\n          return todos.filter((todo) => !todo.completed);\r\n        case \"Scheduled\":\r\n          return todos.filter((todo) => todo.scheduleInfo.isScheduled);\r\n        case \"Unscheduled\":\r\n          return todos.filter((todo) => !todo.scheduleInfo.isScheduled);\r\n        default:\r\n          return todos;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"todos-list\">\r\n      <div className=\"ml-4 mt-4 d-flex align-items-center flex-wrap\">\r\n        <Button onClick={showModal}>+ Create Todo</Button>\r\n        <Button\r\n          as={Link}\r\n          to=\"/reminders\"\r\n          variant=\"light\"\r\n          className=\"ml-3 text-primary d-flex align-items-center\"\r\n        >\r\n          <MdNotifications />\r\n          <div>\r\n            Reminders\r\n            <Badge className=\"m-1\" variant=\"primary\">\r\n              {noOfReminders !== 0 ? noOfReminders : null}\r\n            </Badge>\r\n          </div>\r\n        </Button>\r\n        <Filter selectFilter={(event) => setFilter(event.target.value)} />\r\n      </div>\r\n      {filterTodos().length !== 0 ? (\r\n        <>\r\n          <div className=\"ml-4 text-muted\">\r\n            <small className=\"pc\">\r\n              Hover over any to-do item to view options\r\n            </small>\r\n            <small className=\"mobile\">\r\n              Click any to-do item to view options\r\n            </small>\r\n          </div>\r\n          <ListGroup className=\"list m-4 ml-0\">\r\n            {filterTodos().map((todo) => (\r\n              <TodoItem key={todo.id} todo={todo} />\r\n            ))}\r\n          </ListGroup>\r\n        </>\r\n      ) : (\r\n        <p className=\"m-3 text-center text-muted\">\r\n          No To-Do<small>s</small>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodosList;\r\n","import { useReducer } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createTodo } from \"../redux/actions/TodosActions\";\r\nimport FormInputReducer from \"./FormInputReducer\";\r\n\r\nconst useCreateTodo = () => {\r\n  const dispatchTodo = useDispatch();\r\n  const initialState = {\r\n    name: \"\",\r\n    summary: \"\",\r\n    scheduleInfo: {\r\n      isScheduled: false,\r\n      date: new Date(),\r\n    },\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(FormInputReducer, initialState);\r\n\r\n  const create_Todo = () => {\r\n    dispatchTodo(createTodo(state));\r\n  };\r\n\r\n  return { state, dispatch, create_Todo };\r\n};\r\n\r\nexport default useCreateTodo;\r\n","import useCreateTodo from \"../../hooks/useCreateTodo\";\r\nimport TodoForm from \"../Shared/TodoForm\";\r\n\r\nconst CreateTodo = ({ closeModal }) => {\r\n  const { state, dispatch, create_Todo } = useCreateTodo();\r\n  const createTodo = () => {\r\n    create_Todo();\r\n    closeModal();\r\n  };\r\n  return (\r\n    <TodoForm\r\n      state={state}\r\n      dispatch={dispatch}\r\n      action={createTodo}\r\n      mode=\"create\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CreateTodo;\r\n","import './TodosPage.css';\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TodoModal from \"../../components/Shared/TodoModal\";\r\nimport NoTodos from \"../../components/TodosPage/NoTodos\";\r\nimport TodosList from \"../../components/TodosPage/TodosList\";\r\nimport CreateTodo from \"../../components/TodosPage/CreateTodo\";\r\n\r\nconst TodosPage = () => {\r\n  const todos = useSelector((state) => state);\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <TodoModal\r\n        show={show}\r\n        closeModal={() => setShow(false)}\r\n        Component={CreateTodo}\r\n      />\r\n      {todos.length === 0 ? (\r\n        <NoTodos showModal={() => setShow(true)} />\r\n      ) : (\r\n        <TodosList todos={todos} showModal={() => setShow(true)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodosPage;\r\n","import { MdNotificationsOff } from \"react-icons/md\";\r\n\r\nconst NoReminders = () => {\r\n  return (\r\n    <div className=\"no-reminders\">\r\n      <MdNotificationsOff size={200} color=\"lightgrey\" />\r\n      <span>No reminders</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoReminders;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { MdSchedule } from \"react-icons/md\";\r\nimport TodoItem from \"../Shared/TodoItem\";\r\n\r\nconst RemindersList = ({ reminders }) => {\r\n  return (\r\n    <div className=\"m-4\">\r\n      <p className=\"text-info d-flex align-items-center\">\r\n        <MdSchedule className=\"mr-1\" /> Tasks scheduled for Today\r\n      </p>\r\n      <ListGroup className=\"mt-3\">\r\n        {reminders.map((todo) => (\r\n          <TodoItem todo={todo} key={todo.id} />\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemindersList;\r\n","import \"./TodoReminders.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MdArrowBack } from \"react-icons/md\";\r\nimport useReminder from \"../../hooks/useReminder\";\r\nimport NoReminders from \"../../components/RemaindersPage/NoReminders\";\r\nimport RemindersList from \"../../components/RemaindersPage/RemindersList\";\r\n\r\nconst TodoReminders = () => {\r\n  const reminders = useReminder();\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"reminders-page m-4\">\r\n      <div\r\n        className=\"go-back d-flex align-items-center\"\r\n        onClick={() => history.goBack()}\r\n      >\r\n        <MdArrowBack size={20} />\r\n        <span className=\"ml-2\">Go back</span>\r\n      </div>\r\n      {reminders.length === 0 ? (\r\n        <NoReminders />\r\n      ) : (\r\n        <RemindersList reminders={reminders} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoReminders;\r\n","import \"./TodoSummaryPage.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  MdArrowBack,\r\n  MdInfoOutline,\r\n  MdCheck,\r\n  MdClose,\r\n  MdDelete,\r\n} from \"react-icons/md\";\r\nimport {\r\n  deleteTodo,\r\n  toggleCompleteTodo,\r\n} from \"../../redux/actions/TodosActions\";\r\nimport TodoStatus from \"../../components/Shared/TodoStatus\";\r\n\r\nconst TodoSummaryPage = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const todo = useSelector((state) => {\r\n    const data = state.find((todo) => todo.id === id);\r\n    if (data === undefined) {\r\n      history.replace(\"/todos\");\r\n      return;\r\n    }\r\n    return { ...data };\r\n  });\r\n  return (\r\n    <div className=\"summary-page m-4\">\r\n      <div\r\n        className=\"go-back d-flex align-items-center\"\r\n        onClick={() => history.goBack()}\r\n      >\r\n        <MdArrowBack size={20} />\r\n        <span className=\"ml-2\">Go back</span>\r\n      </div>\r\n      <p className=\"title\">{todo.name}</p>\r\n      <div className=\"m-3\">\r\n        <TodoStatus\r\n          completed={todo.completed}\r\n          scheduleInfo={todo.scheduleInfo}\r\n        />\r\n      </div>\r\n      <div className=\"todo-options mb-3 ml-3\">\r\n        <Button\r\n          variant={todo.completed ? \"danger\" : \"success\"}\r\n          onClick={() => dispatch(toggleCompleteTodo(todo.id))}\r\n          size=\"sm\"\r\n        >\r\n          {todo.completed ? <MdClose /> : <MdCheck />}\r\n          mark as {todo.completed ? \"incomplete\" : \"completed\"}\r\n        </Button>\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          className=\"ml-4\"\r\n          onClick={() => dispatch(deleteTodo(todo.id))}\r\n        >\r\n          <MdDelete color=\"red\" size={20} />\r\n        </Button>\r\n      </div>\r\n      <div className=\"bg-light p-4\">\r\n        <p className=\"summary\">\r\n          <MdInfoOutline />\r\n          <span className=\"ml-2\">summary of the task</span>\r\n        </p>\r\n        <p>{todo.summary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoSummaryPage;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport TodosPage from \"./pages/TodosPage/TodosPage\";\nimport TodoReminders from \"./pages/RemaindersPage/TodoReminders\";\nimport TodoSummaryPage from \"./pages/SummaryPage/TodoSummaryPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/todos\" exact component={TodosPage} />\n        <Route path=\"/todos/:id\" exact component={TodoSummaryPage} />\n        <Route path=\"/reminders\" exact component={TodoReminders} />\n        <Redirect exact to=\"/todos\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const LOCALSTORAGE_KEY = \"todo-app-todos-key\";\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY)) || [];\r\n\r\nconst remainderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"create\":\r\n      return _create(state, action.payload);\r\n    case \"edit\":\r\n      return _edit(state, action.payload);\r\n    case \"toggle_complete\":\r\n      return _toggle(state, action.payload);\r\n    case \"delete\":\r\n      return _delete(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default remainderReducer;\r\n\r\nconst _create = (state, data) => {\r\n  const newState = [data, ...state];\r\n  localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(newState));\r\n  return newState;\r\n};\r\n\r\nconst _edit = (state, data) => {\r\n  const index = state.findIndex((todo) => todo.id === data.id);\r\n  state[index] = data;\r\n  localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(state));\r\n  return [...state];\r\n};\r\n\r\nconst _toggle = (state, id) => {\r\n  const index = state.findIndex((todo) => todo.id === id);\r\n  state[index].completed = !state[index].completed;\r\n  localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(state));\r\n  return [...state];\r\n};\r\n\r\nconst _delete = (state, id) => {\r\n  const newState = state.filter((todo) => todo.id !== id);\r\n  if (newState.length === 0) localStorage.removeItem(LOCALSTORAGE_KEY);\r\n  else localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(newState));\r\n  return newState;\r\n};\r\n","import { createStore } from \"redux\";\r\nimport todosReducer from \"./reducers/TodosReducer\";\r\n\r\nconst store = createStore(todosReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}